name: Build libFLAC and run tests
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST_LOG: info
jobs:
  tests:
    strategy:
      matrix:
        include:
        - os: macos-latest
        - os: windows-latest
          toolchain-suffix: -gnu
          env:
            # https://github.com/rust-lang/rust/issues/68973
            RUSTFLAGS: "-Clink-arg=-lssp_nonshared -Clink-arg=-lssp"
        - os: windows-latest
          toolchain-suffix: -msvc
        - os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    env: ${{ matrix.env || fromJSON('{}') }}
    steps:
      - name: Clone Git repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable${{ matrix.toolchain-suffix }}
      - name: Run tests
        run: |
          cargo test --workspace --all-features
      - name: Run tests (without OGG)
        run: |
          cargo test --workspace --no-default-features --features="build-flac"

  tests-external-libflac:
    runs-on: ubuntu-latest
    steps:
      - name: Install libraries
        run: |
          sudo apt-get install --yes --no-install-recommends libflac-dev
      - name: Clone Git repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Run tests against external libraries
        run: |
          cargo test --workspace --no-default-features -- --nocapture

  check-code:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Git repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: rustfmt
        run: |
          cargo fmt --all --check
      - name: clippy
        run: |
          cargo clippy --all-targets --all-features -- -D warnings
      - name: Build docs
        run: |
          cargo rustdoc --all-features -- -D warnings
      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: target/doc/*
      - name: packaging
        run: |
          cargo package --verbose

  MSYS2:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          update: true
          install: >-
            make
          pacboy: >-
            cmake:p
            rust:p
      - name: Clone Git repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Run tests
        run: |
          cargo test --workspace --all-features
      - name: Run tests (without OGG)
        run: |
          cargo test --workspace --no-default-features --features="build-flac"

  MSYS2-external-libflac:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          update: true
          pacboy: >-
            flac:p
            rust:p
      - name: Clone Git repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Run tests against external libraries
        run: |
          cargo test --workspace --no-default-features -- --nocapture
